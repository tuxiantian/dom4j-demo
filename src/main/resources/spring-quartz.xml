<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans default-lazy-init="false" default-autowire="no" default-dependency-check="none">
  <!-- ********************************************Scheduler配置******************************************** -->
  <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="default" autowire="default" dependency-check="default">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:config/quartz.properties"/>
    <property name="triggers">
      <list>
        <ref bean="testTrigger1"/>
        <ref bean="testTrigger2"/>
      </list>
    </property>
    <property name="startupDelay" value="3"/>
    <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
    <property name="overwriteExistingJobs" value="true"/>
    <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
    <property name="schedulerName" value="ds_scheduler"/>
  </bean>
  <!-- ********************************************QuartzManager配置******************************************** -->
  <bean id="quartzManager" class="com.ai.taskcore.quartz.impl.QuartzManagerImpl" lazy-init="default" autowire="default" dependency-check="default">
    <property name="scheduler" ref="schedulerFactoryBean"/>
  </bean>
  <!-- ********************************************QuartzService配置******************************************** -->
  <bean id="quartzService" class="com.ai.taskcore.quartz.impl.QuartzServiceImpl" lazy-init="default" autowire="default" dependency-check="default">
    <property name="scheduler" ref="schedulerFactoryBean"/>
    <property name="quartzManager" ref="quartzManager"/>
  </bean>
  <!-- ********************************************Trigger配置******************************************** -->
  <bean id="testTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean" lazy-init="default" autowire="default" dependency-check="default">
    <property name="name" value="testTrigger1"/>
    <property name="group" value="ds_trigger"/>
    <property name="jobDetail">
      <ref bean="myJobDetail1"/>
    </property>
    <property name="cronExpression">
      <value>0/10 * * * * ?</value>
    </property>
  </bean>
  <bean id="testTrigger2" class="org.springframework.scheduling.quartz.CronTriggerBean" lazy-init="default" autowire="default" dependency-check="default">
    <property name="name" value="testTrigger2"/>
    <property name="group" value="ds_trigger"/>
    <property name="jobDetail">
      <ref bean="myJobDetail2"/>
    </property>
    <property name="cronExpression">
      <value>0/10 * * * * ?</value>
    </property>
  </bean>
  <!-- ********************************************JobDeail配置******************************************** -->
  <bean id="myJobDetail1" class="com.ai.taskcore.quartz.impl.MethodInvokingJobDetailFactoryBean" lazy-init="default" autowire="default" dependency-check="default">
    <!--false表示等上一个任务执行完后再开启新的任务 -->
    <property name="concurrent" value="false"/>
    <!-- true表示将此JOB持久化到数据库 -->
    <property name="durable" value="true"/>
    <property name="targetObject" ref="myJobTest1"/>
    <property name="targetMethod" value="executeInternal"/>
    <property name="group" value="ds_jobs"/>
    <property name="description" value="myJobTest1"/>
  </bean>
  <bean id="myJobDetail2" class="com.ai.taskcore.quartz.impl.MethodInvokingJobDetailFactoryBean" lazy-init="default" autowire="default" dependency-check="default">
    <!--false表示等上一个任务执行完后再开启新的任务 -->
    <property name="concurrent" value="false"/>
    <!-- true表示将此JOB持久化到数据库 -->
    <property name="durable" value="true"/>
    <property name="targetObject" ref="myJobTest2"/>
    <property name="targetMethod" value="executeInternal"/>
    <property name="group" value="ds_jobs"/>
    <property name="description" value="myJobTest2"/>
  </bean>
</beans>
